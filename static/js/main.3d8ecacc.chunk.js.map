{"version":3,"sources":["components/elements/Header/Header.js","components/elements/NotFound/NotFound.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/customHook.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","NotFound","apiConfig","HeroImage","props","style","background","image","title","text","SearchBar","useState","value","timeout","state","setState","type","placeholder","onChange","e","preventDefault","clearTimeout","target","setTimeout","handleSearch","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","isLoading","setIsLoading","isError","setIsError","fetchMovies","endpoint","a","params","URLSearchParams","get","prev","searchTerm","fetch","json","result","results","heroImage","currentPage","page","totalPages","total_pages","useEffect","sessionStorage","getItem","persistedState","JSON","parse","setItem","stringify","useFetchMovies","API_URL","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","name","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","match","fetchItems","response","endpoint2","resp","resp_json","crew","filter","member","job","actors","cast","localStorage","location","runtime","App","Fragment","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d8ecacc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"rmdb-header\">\r\n      <div className=\"rmdb-header-content\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"./images/reactMovie_logo.png\"\r\n            alt=\"rmdb-logo\"\r\n            className=\"rmdb-logo\"\r\n          />\r\n        </Link>\r\n        <img\r\n          src=\"./images/tmdb_logo.png\"\r\n          alt=\"tmdb_logo\"\r\n          className=\"rmdb-tmdb-logo\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>The page you are looking doesn't exists!!!</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"844dba0bfd8f3a4f3799f6130ef9e335\";\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w500\";\n\nexport const apiConfig = {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n};\n","import React from \"react\";\r\nimport \"./HeroImage.css\";\r\n\r\nconst HeroImage = props => {\r\n  return (\r\n    <div\r\n      className=\"rmdb-heroimage\"\r\n      style={{\r\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n        39%, rgba(0,0,0,0)\r\n        41%,rgba(0,0,0,0.65)\r\n        100%),\r\n        url('${props.image}'), #1c1c1c`\r\n      }}\r\n    >\r\n      <div className=\"rmdb-heroimage-content\">\r\n        <div className=\"rmdb-heroimage-text\">\r\n          <h1>{props.title}</h1>\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroImage;\r\n","import React, { useState } from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = props => {\r\n  const [state, setState] = useState({ value: \"\", timeout: 0 });\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    if (state.timeout) {\r\n      clearTimeout(state.timeout);\r\n    }\r\n\r\n    setState({\r\n      value: e.target.value,\r\n      timeout: setTimeout(() => {\r\n        state.value && props.handleSearch(state.value);\r\n      }, 1000)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"rmdb-searchbar\">\r\n      <div className=\"rmdb-searchbar-content\">\r\n        <i className=\"rmdb-fa-search fa fa-search fa-2x\" />\r\n        <input\r\n          type=\"text\"\r\n          className=\"rmdb-searchbar-input\"\r\n          placeholder=\"Search\"\r\n          onChange={handleChange}\r\n          value={state.value}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./FourColGrid.css\";\r\n\r\nconst FourColGrid = props => {\r\n  // Iterate through all the movie props\r\n  const renderElements = () => {\r\n    const gridElements = props.children.map((element, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\">\r\n          {element}\r\n        </div>\r\n      );\r\n    });\r\n    return gridElements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./MovieThumb.css\";\r\n\r\nconst MovieThumb = props => {\r\n  return (\r\n    <div className=\"rmdb-moviethumb\">\r\n      {props.clickable ? (\r\n        <Link\r\n          to={{\r\n            pathname: `/${props.movieId}`,\r\n            movieName: `${props.movieName}`\r\n          }}\r\n        >\r\n          <img src={props.image} alt=\"moviethumb\" />\r\n        </Link>\r\n      ) : (\r\n        <img src={props.image} alt=\"moviethumb\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React from \"react\";\r\nimport \"./LoadMoreBtn.css\";\r\n\r\nconst LoadMoreBtn = props => {\r\n  return (\r\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import { useState, useEffect } from \"react\";\r\nimport { apiConfig } from \"../../config\";\r\n\r\nexport const useFetchMovies = () => {\r\n  const [state, setState] = useState({ movies: [] });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const fetchMovies = async endpoint => {\r\n    setIsError(false);\r\n    setIsLoading(true);\r\n\r\n    // We can use URLSearchParams to get URL params. very handy!\r\n    const params = new URLSearchParams(endpoint);\r\n    if (!params.get(\"page\")) {\r\n      setState(prev => ({\r\n        ...prev,\r\n        movies: [],\r\n        searchTerm: params.get(\"query\")\r\n      }));\r\n    }\r\n\r\n    try {\r\n      const result = await (await fetch(endpoint)).json();\r\n      setState(prev => ({\r\n        ...prev,\r\n        movies: [...prev.movies, ...result.results],\r\n        heroImage: prev.heroImage || result.results[0],\r\n        currentPage: result.page,\r\n        totalPages: result.total_pages\r\n      }));\r\n    } catch (error) {\r\n      setIsError(true);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Run once on mount\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"HomeState\")) {\r\n      const persistedState = JSON.parse(sessionStorage.getItem(\"HomeState\"));\r\n      setState({ ...persistedState });\r\n    } else {\r\n      fetchMovies(\r\n        `${apiConfig.API_URL}movie/popular?api_key=${apiConfig.API_KEY}`\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  // Remember state for next mount if we are not in a search view\r\n  useEffect(() => {\r\n    if (!state.searchTerm) {\r\n      sessionStorage.setItem(\"HomeState\", JSON.stringify(state));\r\n    }\r\n  }, [state]);\r\n\r\n  return [{ state, isLoading, isError }, fetchMovies];\r\n};\r\n","import React from \"react\";\r\nimport { apiConfig } from \"../../config\";\r\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Home.css\";\r\n\r\nimport { useFetchMovies } from \"./customHook\";\r\n\r\nconst Home = () => {\r\n  const [{ state, isLoading }, fetchMovies] = useFetchMovies();\r\n\r\n  const {\r\n    API_URL,\r\n    API_KEY,\r\n    IMAGE_BASE_URL,\r\n    BACKDROP_SIZE,\r\n    POSTER_SIZE\r\n  } = apiConfig;\r\n\r\n  // Handled by searchbar\r\n  const searchItem = searchTerm => {\r\n    let endpoint = \"\";\r\n\r\n    if (!searchTerm) {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}`;\r\n    }\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  // Handled by loadMore button\r\n  const loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    const { currentPage, searchTerm } = state;\r\n\r\n    if (!searchTerm) {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${currentPage +\r\n        1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&page=${currentPage +\r\n        1}`;\r\n    }\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  return (\r\n    <div className=\"rmdb-home\">\r\n      {state.heroImage && !state.searchTerm ? (\r\n        <div>\r\n          <HeroImage\r\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.heroImage.backdrop_path}`}\r\n            title={state.heroImage.original_title}\r\n            text={state.heroImage.overview}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <SearchBar handleSearch={searchItem} />\r\n      <div className=\"rmdb-home-grid\">\r\n        <FourColGrid\r\n          header={state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\r\n          loading={isLoading}\r\n        >\r\n          {state.movies.map((element, i) => {\r\n            return (\r\n              <MovieThumb\r\n                key={i}\r\n                clickable={true}\r\n                image={\r\n                  element.poster_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\r\n                    : \"./images/no_image.jpg\"\r\n                }\r\n                movieId={element.id}\r\n                movieName={element.original_title}\r\n              />\r\n            );\r\n          })}\r\n        </FourColGrid>\r\n        {isLoading ? <Spinner /> : null}\r\n        {state.currentPage <= state.totalPages && !isLoading ? (\r\n          <LoadMoreBtn onClick={loadMoreItems} text=\"Load More\" />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { apiConfig } from \"../../../config\";\r\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\r\nimport \"./MovieInfo.css\";\r\n\r\nconst MovieInfo = props => {\r\n  const { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } = apiConfig;\r\n\r\n  return (\r\n    <div\r\n      className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path\r\n          ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\r\n          : \"#000\"\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              props.movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\r\n                : \"./images/no_image.jpg\"\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter\r\n              min=\"0\"\r\n              max=\"100\"\r\n              optimum=\"100\"\r\n              low=\"40\"\r\n              high=\"70\"\r\n              value={props.movie.vote_average * 10}\r\n            ></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n            {props.directors.length > 1 ? (\r\n              <h3>DIRECTORS</h3>\r\n            ) : (\r\n              <h3>DIRECTOR</h3>\r\n            )}\r\n            {props.directors.map((element, i) => {\r\n              return (\r\n                <p key={i} className=\"rmdb-director\">\r\n                  {element.name}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <i className=\"fa fa-film fa-5x\" name=\"film\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from \"react\";\r\nimport { calcTime, convertMoney } from \"../../../helpers\";\r\nimport \"./MovieInfoBar.css\";\r\n\r\nconst MovieInfoBar = props => {\r\n  return (\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <i className=\"fa fa-clock-o fa-2x\"></i>\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Running time:{calcTime(props.time)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <i className=\"fa fa-money fa-2x\"></i>\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Budget: {convertMoney(props.budget)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <i className=\"fa fa-usd fa-2x\"></i>\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Revenue {convertMoney(props.revenue)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import React from \"react\";\r\nimport { apiConfig } from \"../../../config\";\r\nimport \"./Actor.css\";\r\n\r\nconst Actor = props => {\r\n  const POSTER_SIZE = \"w154\";\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={\r\n          props.actor.profile_path\r\n            ? `${apiConfig.IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\r\n            : \"./images/no_image.jpg\"\r\n        }\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiConfig } from \"../../config\";\r\nimport Navigation from \"../elements/Navigation/Navigation\";\r\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport Actor from \"../elements/Actor/Actor\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Movie.css\";\r\n\r\nconst Movie = props => {\r\n  const [state, setState] = useState({\r\n    movie: null,\r\n    actor: null,\r\n    directors: [],\r\n    loading: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { API_KEY, API_URL } = apiConfig;\r\n\r\n    if (sessionStorage.getItem(`${props.match.params.movieId}`)) {\r\n      const state = JSON.parse(\r\n        sessionStorage.getItem(`${props.match.params.movieId}`)\r\n      );\r\n      setState({ ...state });\r\n    } else {\r\n      setState({ loading: true });\r\n      // First fetch the movie\r\n      const endpoint = `${API_URL}movie/${props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      fetchItems(endpoint);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const fetchItems = async endpoint => {\r\n    const { API_KEY, API_URL } = apiConfig;\r\n    const response = await fetch(endpoint);\r\n    const result = await response.json();\r\n    setState({\r\n      ...state,\r\n      movie: result\r\n    });\r\n    //... then fetch actors\r\n    const endpoint2 = `${API_URL}movie/${props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n    const resp = await fetch(endpoint2);\r\n    const resp_json = await resp.json();\r\n    const directors = resp_json.crew.filter(\r\n      member => member.job === \"Director\"\r\n    );\r\n    setState({\r\n      ...state,\r\n      movie: result,\r\n      actors: resp_json.cast,\r\n      directors,\r\n      loading: false\r\n    });\r\n    localStorage.setItem(\r\n      `${props.match.params.movieId}`,\r\n      JSON.stringify(state)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"rmdb-movie\">\r\n      {state.movie ? (\r\n        <div>\r\n          <Navigation movie={props.location.movieName} />\r\n          <MovieInfo movie={state.movie} directors={state.directors} />\r\n          <MovieInfoBar\r\n            time={state.movie.runtime}\r\n            budget={state.movie.budget}\r\n            revenue={state.movie.revenue}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      {state.actors ? (\r\n        <div className=\"rmdb-movie-grid\">\r\n          <FourColGrid header={\"Actors\"}>\r\n            {state.actors.map((element, i) => {\r\n              return <Actor key={i} actor={element} />;\r\n            })}\r\n          </FourColGrid>\r\n        </div>\r\n      ) : null}\r\n\r\n      {!state.actors && !state.loading ? <h1>No Movie Found!</h1> : null}\r\n      {state.loading ? <Spinner /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"../elements/Header/Header\";\r\nimport NotFound from \"../elements/NotFound/NotFound\";\r\nimport Home from \"../Home/Home\";\r\nimport Movie from \"../Movie/Movie\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <React.Fragment>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/:movieId\" component={Movie} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </React.Fragment>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}